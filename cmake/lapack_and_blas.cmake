# Search using LAPACK_DIR or LAPACK_ROOT
if(LAPACK_DIR OR LAPACK_ROOT)
   message(VERBOSE "Directory path for Lapack: ${LAPACK_DIR}")
   message(VERBOSE "Directory path for Lapack: ${LAPACK_ROOT}")
   find_package(LAPACK REQUIRED PATHS ${LAPACK_DIR} ${LAPACK_ROOT} NO_DEFAULT_PATH)
   if (LAPACK_FOUND)
      message(STATUS "Lapack library: ${LAPACK_LIBRARIES}")
      set(LAPACK_BLAS_LIBRARIES ${LAPACK_LIBRARIES})
   else()
      MESSAGE( SEND_ERROR  "***********************************")
      MESSAGE( SEND_ERROR  "* LAPACK/BLAS LIBRARIES NOT FOUND *")
      MESSAGE( FATAL_ERROR "***********************************")
   endif()

# Search using OPENBLAS_DIR or OPENBLAS_ROOT
elseif (OpenBLAS_DIR OR OpenBLAS_ROOT)
   message(STATUS "Directory path for OpenBLAS: ${OpenBLAS_DIR}")
   message(STATUS "Directory path for OpenBLAS: ${OpenBLAS_ROOT}")
   find_package(OpenBLAS REQUIRED PATHS ${OpenBLAS_DIR} ${OpenBLAS_ROOT} NO_DEFAULT_PATH)
   if (OpenBLAS_FOUND)
      message(STATUS "OpenBLAS library: ${OpenBLAS_LIBRARIES}")
      set(LAPACK_BLAS_LIBRARIES ${OpenBLAS_LIBRARIES})
   else()
      MESSAGE( SEND_ERROR  "***********************************")
      MESSAGE( SEND_ERROR  "* LAPACK/BLAS LIBRARIES NOT FOUND *")
      MESSAGE( FATAL_ERROR "***********************************")
   endif()

else()

   # Search lapack library using default paths
   find_package(LAPACK REQUIRED)
   if (LAPACK_FOUND)
      message(VERBOSE "Lapack libraries: ${LAPACK_LIBRARIES}")
      list(GET LAPACK_LIBRARIES 0 LAPACK_LIB)
      message(STATUS "Lapack library: ${LAPACK_LIB}")
   else()
      MESSAGE( SEND_ERROR  "***************************************************")
      MESSAGE( SEND_ERROR  "* LAPACK LIBRARIES NOT FOUND **********************")
      MESSAGE( SEND_ERROR  "* Pass the full path of the directory containg it: ")
      MESSAGE( SEND_ERROR  "* -DLAPACK_DIR=/path/to/LapackConfig.cmake")
      MESSAGE( SEND_ERROR  "* -DLAPACK_ROOT=/path/to/lapackDirectory")
      MESSAGE( FATAL_ERROR "***************************************************")
   endif()

   # Search blas library using default paths
   find_package(BLAS REQUIRED)
   if (BLAS_FOUND)
      message(VERBOSE "Blas libraries: ${BLAS_LIBRARIES}")
      list(GET BLAS_LIBRARIES 0 BLAS_LIB)
      message(STATUS "Blas library: ${BLAS_LIB}")
   else()
      MESSAGE( SEND_ERROR  "***************************************************")
      MESSAGE( SEND_ERROR  "* BLAS LIBRARIES NOT FOUND ************************")
      MESSAGE( SEND_ERROR  "* Pass the full path of the directory containg it: ")
      MESSAGE( SEND_ERROR  "* -DOpenBLAS_DIR=/path/to/LapackConfig.cmake")
      MESSAGE( SEND_ERROR  "* -DOpenBLAS_ROOT=/path/to/lapackDirectory")
      MESSAGE( FATAL_ERROR "***************************************************")
   endif()

   set(LAPACK_BLAS_LIBRARIES "${LAPACK_LIBRARIES};${BLAS_LIBRARIES}")
endif()
